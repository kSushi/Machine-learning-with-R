*Exploring the credit data

# View the structure of loan_data
str(loan_data)

# Load the gmodels package 
library(gmodels)

# Call CrossTable() on loan_status
CrossTable(loan_data$loan_status)

# Call CrossTable() on grade and loan_status #Interpreting a CrossTable()
CrossTable(loan_data$grade,loan_data$loan_status, prop.r=TRUE,prop.c=FALSE, prop.t=FALSE, prop.chisq=FALSE)

*Histogram
# Create histogram of loan_amnt: hist_1
hist_1=hist(loan_data$loan_amnt)

# Print locations of the breaks in hist_1
hist_1$breaks

# Change number of breaks and add labels: hist_2
hist_2 <- hist(loan_data$loan_amnt, breaks = 170.5638, xlab = "Annual Income",main = "Histogram of Annual Income")


*Outliers
# Plot the age variable
age=plot(loan_data$age, ylab='Age')
age
# Save the outlier's index to index_highage
index_highage=which(loan_data$age>122)
index_highage
# Create data set new_data with outlier deleted
new_data <- loan_data[-index_highage,]
new_data
# Make bivariate scatterplot of age and annual income
plot(loan_data$age, loan_data$annual_inc, xlab = "Age", ylab = "Annual Income")


*Deleting missing data
# Look at summary of loan_data
summary(loan_data$int_rate)

# Get indices of missing interest rates: na_index
na_index <- which(is.na(loan_data$int_rate))
na_index
# Remove observations with missing interest rates: loan_data_delrow_na
loan_data_delrow_na <- loan_data[-na_index,]

# Make copy of loan_data
loan_data_delcol_na <- loan_data


# Delete interest rate column from loan_data_delcol_na
loan_data_delcol_na$int_rate=NULL


*Replacing
# Compute the median of int_rate
median_ir=median(loan_data$int_rate, na.rm=TRUE)

# Make copy of loan_data
loan_data_replace <- loan_data

# Replace missing interest rates with median
na_index=which(is.na(loan_data$int_rate))
loan_data_replace=loan_data
loan_data_replace$int_rate[na_index] <- median(loan_data$int_rate,na.rm=TRUE)

# Check if the NAs are gone
summary(loan_data_replace$int_rate)

#Model building #Logistic regression
log_model=glm(loan_status ~age, family="binomial",data=training_set)
#log_model=glm(loan_status ~., family="binomial",data=training_set)
log_model

#Decision tree
library(rpart)
DT_model=rpart(loan_status ~., method="class", data=training_set)
plot(DT_model)

Confusion Matrix

# Create confusion matrix
conf_matrix=table(test_set$loan_status,model_pred)
conf_matrix
# Compute classification accuracy
classification_acc=(6092+349)/(6092+2568+688+349)
classification_acc
# Compute sensitivity
Sensity=349/(688+349)
Sensity

